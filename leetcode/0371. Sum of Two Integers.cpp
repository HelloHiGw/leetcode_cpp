/*
(add without carry) 
3    =>  011 
2    =>  010 
3^2  =>  001 
0+0=0，0+1=1, 1+0=1，1+1=0，xor

(carry generated by every bit pair)
3    =>  011 
2    =>  010 
3&2  =>  010
0+0=0, 0+1=0, 1+0=0, 1+1=1, &

combine both is the answer
3^2         =>  001 
(3&2)<<1    =>  100 
gets 101(5)

treat negative as unsigned int, then the part that is bigger than INT_MAX 
will conver to negative
*/

class Solution {
public:
    int getSum(int a, int b) {
        unsigned int x = a, y = b;
        unsigned int carry = 0;
        while (y) {
            // carry should be added to the left bit of the one which genereated it.
            carry = (x & y) << 1;
            x = x ^ y;
            // add x and carry until there is no carry
            y = carry;
        }
        // the same as return (int)x, seems automaticly converting unsigned int to int
        return x;  
    }
};